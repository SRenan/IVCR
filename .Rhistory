rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat)
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
p <- p + ggttile(sample)
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
p <- p + ggtile(sample)
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
p <- p + ggtitle(sample)
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- unique(dat$sample)
p <- p + ggtitle(sample)
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- unique(dat$sample)
p <- p + ggtitle(sample) + theme(title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- unique(dat$sample)
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- basename(unique(dat$sample))
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(dat, plot = T){
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- gsub("\\..*$", "", unique(dat$sample))
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- unique(dat[, list(sample, rev_p)])
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
dat
process_traces <- function(data, plot = T){
dat <- copy(data)
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- gsub("\\..*$", "", unique(dat$sample))
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <-
return(ret)
}
lf <- list.files(patter = ".asc")
lf <- grep("dvf", lf, invert = T, value = T)
lfr <- lapply(lf, fread)
for(i in 1:length(lfr)){
lfr[[i]][, sample := lf[i]]
#lfr[[i]][, capacitance := capacitance[i]]
lfr[[i]][, x := 1:2000]
lfr[[i]] <- lfr[[i]][x >= 1000 & x < 1500]
lfr[[i]][ , newx := seq(-100, 100, length.out = 500)]
}
dat <- rbindlist(lfr)
setnames(dat, "V1", "y")
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
process_traces <- function(data, plot = T){
dat <- copy(data)
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- gsub("\\..*$", "", unique(dat$sample))
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- dat
return(ret)
}
process_traces(dat[sample == "TraceBuffer_1 0.asc"])
lf
for(samp in lf){
#sn <- gsub("\\..*", "", samp)
png(filename = paste0(sn, "_revp.png"))
process_traces(dat[ sample == samp], plot = T)
#dev.off()
}
dev.off()
for(samp in lf){
sn <- gsub("\\..*", "", samp)
#png(filename = paste0(sn, "_revp.png"))
process_traces(dat[ sample == samp], plot = T)
#dev.off()
}
for(samp in lf){
sn <- gsub("\\..*", "", samp)
png(filename = paste0(sn, "_revp.png"))
process_traces(dat[ sample == samp], plot = T)
dev.off()
}
for(samp in lf){
sn <- gsub("\\..*", "", samp)
png(filename = paste0("/media/srenan/1400-EC95/101117/plots/", sn, "_revp.png"))
process_traces(dat[ sample == samp], plot = T)
dev.off()
}
process_traces <- function(data, plot = T){
dat <- copy(data)
samples <- unique(dat$sample)
#for(sample_i in seq_along(samples)){
for(sample_i in samples){
#fitobj <- lm(y ~ x + I(x^2) + I(x^3), data = dat[x > 1000 & x < 1500 & sample == sample_i])
fitobj <- lm(y ~ newx + I(newx^2) + I(newx^3), data = dat[sample == sample_i])
sry <- summary(fitobj)
coefs <- sry$coefficients[,1]
dat[sample == sample_i, i := coefs[1]]
dat[sample == sample_i, a := coefs[2]]
dat[sample == sample_i, b := coefs[3]]
dat[sample == sample_i, c := coefs[4]]
dat[sample == sample_i, fitted := i + newx*a + newx^2*b + newx^3*c]
icepts <- polyroot(coefs)
minyx <- dat[which.min(abs(fitted)), newx]
rev_p <- Re(icepts[which.min(abs(Re(minyx - icepts)))])
#dat[sample == sample_i, rev_p := find0(icepts)]
dat[sample == sample_i, rev_p := rev_p]
}
if(plot){
# p <- ggplot(dat[x > 1100 & x < 1400], aes(x = newx, y = y)) + geom_line(color = "red", size = 2)
# p <- p + geom_line(aes(x = newx, y = fitted)) + geom_vline(aes(xintercept = rev_p))
# p <- p + facet_wrap(~sample)
p <- ggplot(dat, aes(x = newx, y = y)) + geom_line(color="red", size = 1.5) +
geom_line(aes(x = newx, y = fitted), size = 1.5) +#, alpha = 0.7) +
theme(panel.grid = element_blank()) + geom_vline(xintercept = 0) +
geom_hline(yintercept = 0)  + xlab("mV") + ylab("pA/pF")
p <-  p + geom_text(aes(x= min(newx), y = max(y),  label = paste("RP =", round(rev_p,2))), hjust = 0, vjust = 0)
sample <- gsub("\\..*$", "", unique(dat$sample))
p <- p + ggtitle(sample) + theme(plot.title = element_text(hjust = 0.5))
#p <- p + facet_wrap(~sample)
print(p)
}
ret <- dat
return(ret)
}
for(samp in lf){
sn <- gsub("\\..*", "", samp)
png(filename = paste0("/media/srenan/1400-EC95/101117/plots/", sn, "_revp.png"))
process_traces(dat[ sample == samp], plot = T)
dev.off()
}
-2*log(1)
-2*log(0.5)
-2*log(0.1)
-2*log(0.9)
